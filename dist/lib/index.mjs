var $=Object.defineProperty,v=Object.defineProperties;var O=Object.getOwnPropertyDescriptors;var b=Object.getOwnPropertySymbols;var _=Object.prototype.hasOwnProperty,q=Object.prototype.propertyIsEnumerable;var U=(a,e,t)=>e in a?$(a,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[e]=t,S=(a,e)=>{for(var t in e||(e={}))_.call(e,t)&&U(a,t,e[t]);if(b)for(var t of b(e))q.call(e,t)&&U(a,t,e[t]);return a},E=(a,e)=>v(a,O(e));var I=(a,e,t)=>new Promise((c,p)=>{var g=n=>{try{l(t.next(n))}catch(i){p(i)}},u=n=>{try{l(t.throw(n))}catch(i){p(i)}},l=n=>n.done?c(n.value):Promise.resolve(n.value).then(g,u);l((t=t.apply(a,e)).next())});import*as r from"react";import{ref as z,uploadBytesResumable as G,getDownloadURL as J}from"firebase/storage";import{isFunction as K}from"lodash";import{nanoid as Q}from"nanoid";import{jsx as Y}from"react/jsx-runtime";var h=({payload:a,file:e})=>K(a)?a(e==null?void 0:e.name):a||Q(),W=a=>{let[e,t]=r.useState(!1),[c,p]=r.useState(0),[g,u]=r.useState(""),[l,n]=r.useState(""),[i,T]=r.useState(""),[y,x]=r.useState(""),[N,L]=r.useState(!1),H=r.forwardRef((C,M)=>{let k=s=>{let f=Math.round(s.bytesTransferred/s.totalBytes*100);p(f)},w=s=>{t(!1),L(s),console.log(s)};return Y("input",E(S({type:"file",onChange:s=>{s.preventDefault();let o=s.currentTarget.files[0];x(o.name),T(o.type),t(!0);let{includeExt:P,filename:d,storage:A,path:B}=a,m=P?o==null?void 0:o.type.replace(/(.*)\//g,""):null,R=m?h({payload:d,file:o})+"."+m:h({payload:d,file:o});if(n(R),!o)return;let D=z(A,`/${B}/${R}`),F=G(D,o);F.on("state_changed",k,w,()=>I(void 0,null,function*(){let V=yield J(F.snapshot.ref);u(V),t(!1)}))},disabled:e},C),{ref:M}))});return{uploading:e,progress:c,fileURL:g,fileName:l,originalFileName:y,fileType:i,error:N,FileUploaderUI:H}},X=W;export{X as useFirebaseFileUploader};
